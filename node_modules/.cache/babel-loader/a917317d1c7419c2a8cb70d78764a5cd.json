{"ast":null,"code":"var _jsxFileName = \"/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/Simple-Text-Box-Webpage-React/src/components/TextBox.jsx\";\n// export default function TexBox() {\n//     // Store Title and Text Box input on refresh\n//     function storageAvailable(type) {\n//         var storage;\n//         try {\n//             storage = window[type];\n//             var x = '__storage_test__';\n//             storage.setItem(x, x);\n//             storage.removeItem(x);\n//             return true;\n//         } catch (e) {\n//             return e instanceof DOMException && (\n//                     // everything except Firefox\n//                     e.code === 22 ||\n//                     // Firefox\n//                     e.code === 1014 ||\n//                     // test name field too, because code might not be present\n//                     // everything except Firefox\n//                     e.name === 'QuotaExceededError' ||\n//                     // Firefox\n//                     e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n//                 // acknowledge QuotaExceededError only if there's something already stored\n//                 (storage && storage.length !== 0);\n//         }\n//     }\n//     var inputTitle = document.getElementById('title-text-box');\n//     var inputTextBox = document.getElementById('textarea');\n//     if (!localStorage.getItem('title-text-box', 'textarea')) {\n//         populateStorage();\n//     } else {\n//         setInput();\n//     }\n//     function populateStorage() {\n//         localStorage.setItem('title-text-box', document.getElementById('title-text-box').value);\n//         localStorage.setItem('textarea', document.getElementById('textarea').value);\n//     }\n//     function setInput() {\n//         var currentText = localStorage.getItem('title-text-box');\n//         var currentTextArea = localStorage.getItem('textarea');\n//         document.getElementById('title-text-box').value = currentText;\n//         document.getElementById('textarea').value = currentTextArea;\n//     }\n//     inputTitle.onchange = populateStorage;\n//     inputTextBox.onchange = populateStorage;\n// }\n// import React, { useState, useEffect } from \"react\";\n// const TextBox = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [noteEditing, setNoteEditing] = useState(\"\");\n//   useEffect(() => {\n//     const json = JSON.stringify(notes);\n//     localStorage.setItem(\"notes\", json);\n//   }, [notes]);\n//   useEffect(() => {\n//     const json = localStorage.getItem(\"notes\");\n//     const savedNotes = JSON.parse(json);\n//     if (savedNotes) {\n//       setNotes(savedNotes);\n//     }\n//   }, []);\n//   const addNote = (e) => {\n//     e.preventDefault();\n//     const newNote = {\n//       id: Math.random().toString(36).substr(2, 9),\n//       text: e.target.note.value,\n//     };\n//     setNotes([...notes, newNote]);\n//     e.target.note.value = \"\";\n//   };\n//   const deleteNote = (idToDelete) => {\n//     const filteredNotes = notes.filter((note) => note.id !== idToDelete);\n//     setNotes(filteredNotes);\n//   };\n//   const submitEdits = (event, idToEdit) => {\n//     event.preventDefault();\n//     const updatedNotes = notes.map((note) => {\n//       if (note.id === idToEdit) {\n//         return {\n//           id: note.id,\n//           text: event.target.note.value,\n//         };\n//       } else {\n//         return note;\n//       }\n//     });\n//     setNotes(updatedNotes);\n//     setNoteEditing(\"\");\n//   };\n//   return (\n//     <div className=\"textbox\">\n//       <h1>localStorage Demo</h1>\n//       <form onSubmit={addNote}>\n//         <input type=\"text\" name=\"note\" />\n//         <input type=\"Submit\" />\n//       </form>\n//       {notes.map((note) => (\n//         <div key={note.id}>\n//           {note.id !== noteEditing ? (\n//             <div>{note.text}</div>\n//           ) : (\n//               <form onSubmit={(e) => submitEdits(e, note.id)}>\n//                 <textarea name=\"note\" defaultValue={note.text}></textarea>\n//                 <button type=\"Submit\"> Submit Edits</button>\n//               </form>\n//             )}\n//           <button onClick={() => deleteNote(note.id)}>delete</button>\n//           <button onClick={() => setNoteEditing(note.id)}>edit</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n// export default TextBox;\n// import React from 'react';\n// import Moment from 'react-moment';\n// export default class TextBox extends React.Component {\n//   render() {\n//     const dateToFormat = '1976-04-19T12:59-0500';\n//     return (\n//       <Moment>{dateToFormat}</Moment>\n//     );\n//   }\n// }\nimport React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TextBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n  }\n\n  render() {\n    const currentDateTime = moment();\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Moment, {\n        format: \"MMMM Do YYYY, h:mm:ss a\",\n        children: currentDateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Moment, {\n          add: {\n            hours: 12\n          },\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(Moment, {\n          add: {\n            days: 1,\n            hours: 12\n          },\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(Moment, {\n          subtract: {\n            hours: 12\n          },\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 81\n        }, this), /*#__PURE__*/_jsxDEV(Moment, {\n          subtract: {\n            days: 1,\n            hours: 12\n          },\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kendrawing/Documents/Coding Projects:Practice/1 Repos:Deployed/Simple-Text-Box-Webpage-React/src/components/TextBox.jsx"],"names":["React","Moment","moment","TextBox","Component","state","days","undefined","hours","minutes","seconds","render","currentDateTime"],"mappingskB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACJC,MAAAA,IAAI,EAAEC,SADF;AAEJC,MAAAA,KAAK,EAAED,SAFH;AAGJE,MAAAA,OAAO,EAAEF,SAHL;AAIJG,MAAAA,OAAO,EAAEH;AAJL,KADyC;AAAA;;AAOjDI,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAGV,MAAM,EAA9B;AAEA,UAAM;AAAEI,MAAAA,IAAF;AAAQE,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoC,KAAKL,KAA/C;AACA,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,yBAAf;AAAA,kBAA0CO;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAE;AAAEJ,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,oBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,oBAC2D;AAAA;AAAA;AAAA;AAAA,gBAD3D,eAEI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAE;AAAEN,YAAAA,IAAI,EAAE,CAAR;AAAWE,YAAAA,KAAK,EAAE;AAAlB,WAAb;AAAA,oBAAsCI;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ,oBAEoE;AAAA;AAAA;AAAA;AAAA,gBAFpE,eAGI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE;AAAEJ,YAAAA,KAAK,EAAE;AAAT,WAAlB;AAAA,oBAAkCI;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHJ,oBAGgE;AAAA;AAAA;AAAA;AAAA,gBAHhE,eAII,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE;AAAEN,YAAAA,IAAI,EAAE,CAAR;AAAWE,YAAAA,KAAK,EAAE;AAAlB,WAAlB;AAAA,oBAA2CI;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA1BgD","sourcesContent":["// export default function TexBox() {\n//     // Store Title and Text Box input on refresh\n//     function storageAvailable(type) {\n//         var storage;\n//         try {\n//             storage = window[type];\n//             var x = '__storage_test__';\n//             storage.setItem(x, x);\n//             storage.removeItem(x);\n//             return true;\n//         } catch (e) {\n//             return e instanceof DOMException && (\n//                     // everything except Firefox\n//                     e.code === 22 ||\n//                     // Firefox\n//                     e.code === 1014 ||\n//                     // test name field too, because code might not be present\n//                     // everything except Firefox\n//                     e.name === 'QuotaExceededError' ||\n//                     // Firefox\n//                     e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n//                 // acknowledge QuotaExceededError only if there's something already stored\n//                 (storage && storage.length !== 0);\n//         }\n//     }\n\n//     var inputTitle = document.getElementById('title-text-box');\n//     var inputTextBox = document.getElementById('textarea');\n\n//     if (!localStorage.getItem('title-text-box', 'textarea')) {\n//         populateStorage();\n//     } else {\n//         setInput();\n//     }\n\n//     function populateStorage() {\n//         localStorage.setItem('title-text-box', document.getElementById('title-text-box').value);\n//         localStorage.setItem('textarea', document.getElementById('textarea').value);\n//     }\n\n//     function setInput() {\n//         var currentText = localStorage.getItem('title-text-box');\n//         var currentTextArea = localStorage.getItem('textarea');\n\n//         document.getElementById('title-text-box').value = currentText;\n//         document.getElementById('textarea').value = currentTextArea;\n//     }\n\n//     inputTitle.onchange = populateStorage;\n//     inputTextBox.onchange = populateStorage;\n\n\n// }\n\n// import React, { useState, useEffect } from \"react\";\n\n// const TextBox = () => {\n//   const [notes, setNotes] = useState([]);\n//   const [noteEditing, setNoteEditing] = useState(\"\");\n\n//   useEffect(() => {\n//     const json = JSON.stringify(notes);\n//     localStorage.setItem(\"notes\", json);\n//   }, [notes]);\n\n//   useEffect(() => {\n//     const json = localStorage.getItem(\"notes\");\n//     const savedNotes = JSON.parse(json);\n//     if (savedNotes) {\n//       setNotes(savedNotes);\n//     }\n//   }, []);\n\n//   const addNote = (e) => {\n//     e.preventDefault();\n//     const newNote = {\n//       id: Math.random().toString(36).substr(2, 9),\n//       text: e.target.note.value,\n//     };\n//     setNotes([...notes, newNote]);\n//     e.target.note.value = \"\";\n//   };\n\n//   const deleteNote = (idToDelete) => {\n//     const filteredNotes = notes.filter((note) => note.id !== idToDelete);\n//     setNotes(filteredNotes);\n//   };\n\n//   const submitEdits = (event, idToEdit) => {\n//     event.preventDefault();\n//     const updatedNotes = notes.map((note) => {\n//       if (note.id === idToEdit) {\n//         return {\n//           id: note.id,\n//           text: event.target.note.value,\n//         };\n//       } else {\n//         return note;\n//       }\n//     });\n//     setNotes(updatedNotes);\n//     setNoteEditing(\"\");\n//   };\n\n\n//   return (\n//     <div className=\"textbox\">\n//       <h1>localStorage Demo</h1>\n//       <form onSubmit={addNote}>\n//         <input type=\"text\" name=\"note\" />\n//         <input type=\"Submit\" />\n//       </form>\n//       {notes.map((note) => (\n//         <div key={note.id}>\n//           {note.id !== noteEditing ? (\n//             <div>{note.text}</div>\n//           ) : (\n//               <form onSubmit={(e) => submitEdits(e, note.id)}>\n//                 <textarea name=\"note\" defaultValue={note.text}></textarea>\n//                 <button type=\"Submit\"> Submit Edits</button>\n//               </form>\n//             )}\n//           <button onClick={() => deleteNote(note.id)}>delete</button>\n//           <button onClick={() => setNoteEditing(note.id)}>edit</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TextBox;\n\n// import React from 'react';\n// import Moment from 'react-moment';\n\n// export default class TextBox extends React.Component {\n//   render() {\n//     const dateToFormat = '1976-04-19T12:59-0500';\n//     return (\n\n//       <Moment>{dateToFormat}</Moment>\n//     );\n//   }\n// }\nimport React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment'\n\nexport default class TextBox extends React.Component {\n    state = {\n        days: undefined,\n        hours: undefined,\n        minutes: undefined,\n        seconds: undefined\n    };\n    render() {\n        const currentDateTime = moment()\n\n        const { days, hours, minutes, seconds } = this.state;\n        return (\n            <div>\n                <Moment format='MMMM Do YYYY, h:mm:ss a'>{currentDateTime}</Moment>\n\n                <div>\n                    <Moment add={{ hours: 12 }}>{currentDateTime}</Moment> <br />\n                    <Moment add={{ days: 1, hours: 12 }}>{currentDateTime}</Moment> <br />\n                    <Moment subtract={{ hours: 12 }}>{currentDateTime}</Moment> <br />\n                    <Moment subtract={{ days: 1, hours: 12 }}>{currentDateTime}</Moment>\n                </div>\n            </div>\n\n\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}